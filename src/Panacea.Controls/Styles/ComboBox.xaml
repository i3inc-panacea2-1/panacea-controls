<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Panacea.Controls"
    xmlns:converters="clr-namespace:Panacea.Controls.Converters"
    xmlns:local="clr-namespace:Panacea.Controls.Styles"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <converters:HintVisibilityConverter x:Key="hintVisibilityConverter" />
    <converters:TransformationConverter x:Key="TransformationConverter" />
    <converters:PercentageConverter x:Key="PercentageConverter" />


    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <sys:Double x:Key="ScaleMin">.7</sys:Double>
                        <sys:Double x:Key="ScaleMax">.93</sys:Double>
                        <sys:Double x:Key="TranslateMin">13</sys:Double>
                        <SolidColorBrush x:Key="NormalBorderColor" Color="#55888888" />
                    </ControlTemplate.Resources>
                    <Border
                        Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        CornerRadius="0">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Name="Label"
                                Grid.Row="0"
                                Margin="0,0,0,0"
                                VerticalAlignment="Bottom"
                                Text="{Binding Path=(controls:Material.Label), RelativeSource={RelativeSource TemplatedParent}}">
                                <TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform x:Name="TranslateTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{StaticResource TransformationConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding ElementName="HiddenBorder" Path="Width" />
                                                    <Binding Source="{StaticResource TranslateMin}" />
                                                    <Binding ElementName="ContentSite" Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                        <ScaleTransform x:Name="ScaleTransform">
                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource TransformationConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding ElementName="HiddenBorder" Path="Width" />
                                                    <Binding Source="{StaticResource ScaleMin}" />
                                                    <Binding Source="{StaticResource ScaleMax}" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>
                                            <ScaleTransform.ScaleY>
                                                <MultiBinding Converter="{StaticResource TransformationConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding ElementName="HiddenBorder" Path="Width" />
                                                    <Binding Source="{StaticResource ScaleMin}" />
                                                    <Binding Source="{StaticResource ScaleMax}" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleY>
                                        </ScaleTransform>
                                    </TransformGroup>
                                </TextBlock.RenderTransform>
                                <TextBlock.Opacity>
                                    <MultiBinding Converter="{StaticResource TransformationConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding ElementName="HiddenBorder" Path="Width" />
                                        <Binding Source="{StaticResource ScaleMin}" />
                                        <Binding Source="{StaticResource ScaleMax}" />
                                    </MultiBinding>
                                </TextBlock.Opacity>
                            </TextBlock>
                            <ToggleButton
                                x:Name="ToggleButton"
                                Grid.Row="1"
                                Grid.Column="2"
                                Margin="0,1,0,0"
                                Padding="0,0,0,-1"
                                Focusable="False"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border Name="PopupContainer" Grid.Row="1">
                                <Popup
                                    x:Name="Popup"
                                    Grid.Row="1"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{Binding IsDropDownOpen, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Bottom"
                                    PlacementTarget="{Binding PopupContainer}"
                                    PopupAnimation="Fade"
                                    StaysOpen="False">
                                    <Popup.Style>
                                        <Style TargetType="{x:Type Popup}">
                                            <Setter Property="StaysOpen" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=DropDown}" Value="True">
                                                    <Setter Property="StaysOpen" Value="True" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Popup.Style>
                                    <Grid
                                        x:Name="DropDown"
                                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                        SnapsToDevicePixels="True">
                                        <Border
                                            Margin="5"
                                            Background="White"
                                            CornerRadius="2">
                                            <Border.Effect>
                                                <DropShadowEffect
                                                    BlurRadius="5"
                                                    Opacity=".1"
                                                    ShadowDepth="0"
                                                    Color="#000000" />
                                            </Border.Effect>

                                        </Border>
                                        <Border
                                            x:Name="DropDownBorder"
                                            Margin="10"
                                            BorderThickness="1" />
                                        <ScrollViewer
                                            Margin="4,6,4,6"
                                            Foreground="{DynamicResource ColorForeground}"
                                            SnapsToDevicePixels="True">
                                            <StackPanel
                                                IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                TextBlock.TextAlignment="Left" />
                                        </ScrollViewer>
                                    </Grid>

                                </Popup>

                            </Border>

                            <ContentPresenter
                                x:Name="ContentSite"
                                Grid.Row="1"
                                Margin="0,0,23,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Padding" Value="0" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <Border
                                Name="HiddenBorder"
                                Width="0"
                                Visibility="Collapsed" />
                            <Border
                                Name="NormalBorder"
                                Grid.Row="2"
                                Margin="0,-1,0,0"
                                VerticalAlignment="Top"
                                BorderBrush="{StaticResource NormalBorderColor}"
                                BorderThickness="0,0,0,2" />
                            <Border
                                Name="HighlightBorder"
                                Grid.Row="2"
                                Margin="50, -1, 50, 0"
                                VerticalAlignment="Top"
                                BorderBrush="{TemplateBinding controls:Material.HighlightColor}"
                                BorderThickness="0,0,0,2"
                                Opacity="0" />
                            <TextBox
                                x:Name="PART_EditableTextBox"
                                Grid.Row="1"
                                Margin="0"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Focusable="True"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Style="{x:Null}"
                                Visibility="Collapsed" />
                            <TextBlock
                                Name="ErrorText"
                                Grid.Row="3"
                                Margin="2,0,0,0"
                                Foreground="Red"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap">
                                <TextBlock.Resources>
                                    <sys:Double x:Key="Percentage">.7</sys:Double>
                                </TextBlock.Resources>
                                <TextBlock.FontSize>
                                    <MultiBinding Converter="{StaticResource PercentageConverter}">
                                        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Source="{StaticResource Percentage}" />
                                    </MultiBinding>
                                </TextBlock.FontSize>

                            </TextBlock>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).                       (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>



                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                        Storyboard.TargetName="HighlightBorder"
                                        Storyboard.TargetProperty="Margin"
                                        To="0 -1 0 0"
                                        Duration="0:0:0.2" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="HighlightBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:0.2" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="HiddenBorder"
                                        Storyboard.TargetProperty="Width"
                                        From="1"
                                        To="0"
                                        Duration="0:0:0.2" />

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation
                                        Storyboard.TargetName="HighlightBorder"
                                        Storyboard.TargetProperty="Margin"
                                        To="50,-1,50,0"
                                        Duration="0:0:0.2" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="HighlightBorder"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0:0:0.2" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="HiddenBorder"
                                        Storyboard.TargetProperty="Width"
                                        From="0"
                                        To="1"
                                        Duration="0:0:0.2" />

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="IsDropDownOpen" Value="True" />
                        </Trigger>
                        

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="NormalBorder" Property="BorderBrush" Value="{DynamicResource ColorError}" />
                            <Setter TargetName="HighlightBorder" Property="BorderBrush" Value="{DynamicResource ColorError}" />
                            <Setter TargetName="ErrorText" Property="Text" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="False">
                            <Setter TargetName="NormalBorder" Property="BorderBrush" Value="{StaticResource NormalBorderColor}" />
                            <Setter TargetName="HighlightBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=(controls:Material.HighlightColor)}" />
                            <Setter TargetName="ErrorText" Property="Text" Value="" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="MaterialDesignComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
        <Grid x:Name="GridWrapper">
            <Border
                x:Name="BackBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true" />

            <Border
                x:Name="MouseOverBorder"
                Background="{TemplateBinding Foreground}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Opacity="0"
                SnapsToDevicePixels="true" />
            <Border
                x:Name="SelectedBorder"
                Background="{TemplateBinding Foreground}"
                Opacity="0"
                RenderTransformOrigin="0.5,0.5" />

            <Border Margin="{TemplateBinding Padding}">
                <ContentPresenter TextBlock.TextAlignment="Left" />
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                            <VisualTransition.GeneratedEasingFunction>
                                <CircleEase EasingMode="EaseOut" />
                            </VisualTransition.GeneratedEasingFunction>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="MouseOverBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0.1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="SelectionStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3" />
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Selected">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="SelectedBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0.18"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Unselected" />
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Unfocused" />
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Focused">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="MouseOverBorder"
                                Storyboard.TargetProperty="Opacity"
                                To="0.1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="GridWrapper" Property="Opacity" Value="0.56" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Tag" Value="1.0" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="0" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource MaterialDesignComboBoxItemTemplate}" />
    </Style>
</ResourceDictionary>