<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Panacea.Controls"
    xmlns:local="clr-namespace:Panacea.Controls.Styles">
    <Style
        x:Key="SimpleWithBackground"
        BasedOn="{x:Null}"
        TargetType="ButtonBase">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border
                        Name="ButtonBackground"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="GelButtonContent"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Cyan" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBackground" Property="Background" Value="#33ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="Simple"
        BasedOn="{x:Null}"
        TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="GelButtonContent"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="black " />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="black " />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextButton" TargetType="Button">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="10 5 10 8" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
        <Setter Property="controls:RippleEffectDecorator.HighlightBackground" Value="{DynamicResource BackgroundHover}" />
        <Setter Property="Foreground" Value="{StaticResource Primary}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="TextBlock.LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <controls:RippleEffectDecorator>

                        <Border
                            Name="Border"
                            
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            BorderThickness="0">

                            <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </controls:RippleEffectDecorator>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="OutlinedButton"
        BasedOn="{StaticResource TextButton}"
        TargetType="Button">
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundHover}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <controls:RippleEffectDecorator>
                        <Border
                            Name="Border"
                            
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">

                            <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </controls:RippleEffectDecorator>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="OutlinedSecondaryButton"
        BasedOn="{StaticResource OutlinedButton}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource Secondary}" />
    </Style>


    <Style
        x:Key="PrimaryButton"
        BasedOn="{StaticResource TextButton}"
        TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Primary}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="controls:RippleEffectDecorator.HighlightBackground" Value="#77FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=Border}" />
                        </Grid.OpacityMask>
                        <Border 
                        Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            CornerRadius="3"
                            Background="White"
                            MinHeight="{Binding ElementName=Ripple, Path=ActualHeight}"
                            MinWidth="{Binding ElementName=Ripple, Path=ActualWidth}">

                        </Border>
                        <controls:RippleEffectDecorator Background="{TemplateBinding Background}" x:Name="Ripple">
                            <ContentPresenter VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </controls:RippleEffectDecorator>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="SecondaryButton"
        BasedOn="{StaticResource PrimaryButton}"
        TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Secondary}"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryForeground}"/>
    </Style>
</ResourceDictionary>